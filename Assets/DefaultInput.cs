//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/DefaultInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""e417af02-a56b-4f4c-b18b-d9c3b806800a"",
            ""actions"": [
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""bfd3a0dc-b6ae-4734-b8e3-d8b225a453de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""Button"",
                    ""id"": ""c1cbd0e0-e4d2-460e-a959-75b7832e8a7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CenterCamera"",
                    ""type"": ""Button"",
                    ""id"": ""8ac6d8be-0c9f-4f61-9cff-6ccc095eb4a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMove"",
                    ""type"": ""Value"",
                    ""id"": ""a21ccf82-5db4-4613-a7f8-59a28b9526dd"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f3fbd958-d594-4b21-b7d1-232e6a01feb2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.9)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""6cedf111-f4f6-4f65-8552-bbd34572eea8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""efda7ba8-380e-484d-a3bf-281afb3920cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""0f730a7d-304d-4309-98c5-eb5f32c7736d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeapon"",
                    ""type"": ""Value"",
                    ""id"": ""219b1aba-59bf-4604-bdc5-e172ea10fdb5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraFollowToggle"",
                    ""type"": ""Button"",
                    ""id"": ""2821c93f-f398-409b-9f5d-11dea2fe3f29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""06309422-61dc-4553-ad31-6176e704d0a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectOne"",
                    ""type"": ""Button"",
                    ""id"": ""22cbf08f-fff1-4c95-9fd8-a2836dccc300"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTwo"",
                    ""type"": ""Button"",
                    ""id"": ""0f9f269f-7ad6-4ca0-b68c-6972541ef3f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectThree"",
                    ""type"": ""Button"",
                    ""id"": ""bf74b9b5-0a66-4633-b73b-8581eb0b3dd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectFour"",
                    ""type"": ""Button"",
                    ""id"": ""bc646dc4-d8f5-47c9-81de-ae56561fbe03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectFive"",
                    ""type"": ""Button"",
                    ""id"": ""0a433b1f-4986-49d9-b24e-5fd005c17bc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a7aa0231-49a6-4f7c-953e-b4f9143a9825"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86809108-2b4d-416e-8c18-8780fe240bd4"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""418cd8b3-d1bf-428e-a358-3b2e945691b2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CenterCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d814355f-f684-4a6b-80fc-c7857a8053c6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ec66175a-70a2-47aa-9fb7-728bfaffd90b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bdcb72c-e039-433f-9b8c-025f52b172a3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a2b781d9-170e-4f2d-b6f3-c864852c9a0e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bf22d3a6-2659-4c92-933c-66386a2974f9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6de418c2-3c8a-4d66-a76c-ae4d7fe27938"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""103ac551-bdf7-4f19-9747-b18a3d451a1d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb1ea54c-b9e9-484e-a98e-86a910914ae7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d78b95e-35f3-4007-bf0b-4747e72f6468"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""093c30e0-8ab2-4d76-8283-f8ad9a98c2f5"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4543659c-8411-4012-a5a1-a3bb543ceb2d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraFollowToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edcebc97-f4ee-4900-adce-d3eed2f48616"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e057d44-473e-41d0-aab2-ec9f2a8238f6"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dd4e4fc-a2ab-4025-96c9-f80eee6e1f5b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e48e8a33-8f90-4db4-a1e1-e09fea60c38c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""deac6c8e-572b-4684-a982-9a0809cfbc6e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""489a93e2-29d3-4903-9ddb-dd6a1266bd50"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory"",
            ""id"": ""3d16a4ff-3567-4fa5-b044-edaa93c4838f"",
            ""actions"": [
                {
                    ""name"": ""ClickInventory"",
                    ""type"": ""Button"",
                    ""id"": ""d1517fb1-5204-4406-b6aa-37b75b18bdad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseInventory"",
                    ""type"": ""Button"",
                    ""id"": ""505374de-0eab-4aec-a279-11b7fdf17f4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""fe200db8-d958-4af6-b6ee-a498dae9c85c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnItem"",
                    ""type"": ""Button"",
                    ""id"": ""480cf9ca-166e-4faa-8225-5ecfbef5e48b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryMouseMove"",
                    ""type"": ""Value"",
                    ""id"": ""516835d9-f300-4679-866c-69f71daaf42a"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClickItem"",
                    ""type"": ""Button"",
                    ""id"": ""0c01e44c-1a0e-4214-b28d-9649ab37821e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5a185e30-4268-45cc-a74a-d342c56034b1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb149ced-0696-4846-9a70-81bf5430e943"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70ab0c25-03b5-4aca-9e9f-f28adbe97cc1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1253243-1968-49f3-b3be-960bec83c01d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7670eee-a785-47de-b587-20cdf487662e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryMouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc78e692-aec8-4b39-8bd8-c15ea825fd05"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenu"",
            ""id"": ""a67324f2-3a1b-4618-8328-a48a69d5ddbe"",
            ""actions"": [
                {
                    ""name"": ""ClickInventory"",
                    ""type"": ""Button"",
                    ""id"": ""2f659ab9-0ea6-409b-8a4e-25b146cd59d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnItem"",
                    ""type"": ""Button"",
                    ""id"": ""d9d95420-6553-47ed-9c04-6e15ad16ad6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""5af91cd3-30f6-481f-9cbc-6b9bb7ed6a81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryMouseMove"",
                    ""type"": ""Value"",
                    ""id"": ""d0cbf1b9-15f3-4201-9f6f-6c3bd26a6e30"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b8799bc0-46cc-438b-8851-ec020a5b5e0c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryMouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1240d00d-3c4c-4081-8acf-66ca91f05e26"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75521ee8-14b4-4787-8200-a637a6e563ef"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37d59edd-fef4-49c7-b425-04653521dd81"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_MouseClick = m_Gameplay.FindAction("MouseClick", throwIfNotFound: true);
        m_Gameplay_MoveCamera = m_Gameplay.FindAction("MoveCamera", throwIfNotFound: true);
        m_Gameplay_CenterCamera = m_Gameplay.FindAction("CenterCamera", throwIfNotFound: true);
        m_Gameplay_MouseMove = m_Gameplay.FindAction("MouseMove", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Reload = m_Gameplay.FindAction("Reload", throwIfNotFound: true);
        m_Gameplay_Aim = m_Gameplay.FindAction("Aim", throwIfNotFound: true);
        m_Gameplay_OpenInventory = m_Gameplay.FindAction("OpenInventory", throwIfNotFound: true);
        m_Gameplay_SwitchWeapon = m_Gameplay.FindAction("SwitchWeapon", throwIfNotFound: true);
        m_Gameplay_CameraFollowToggle = m_Gameplay.FindAction("CameraFollowToggle", throwIfNotFound: true);
        m_Gameplay_Throw = m_Gameplay.FindAction("Throw", throwIfNotFound: true);
        m_Gameplay_SelectOne = m_Gameplay.FindAction("SelectOne", throwIfNotFound: true);
        m_Gameplay_SelectTwo = m_Gameplay.FindAction("SelectTwo", throwIfNotFound: true);
        m_Gameplay_SelectThree = m_Gameplay.FindAction("SelectThree", throwIfNotFound: true);
        m_Gameplay_SelectFour = m_Gameplay.FindAction("SelectFour", throwIfNotFound: true);
        m_Gameplay_SelectFive = m_Gameplay.FindAction("SelectFive", throwIfNotFound: true);
        // Inventory
        m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
        m_Inventory_ClickInventory = m_Inventory.FindAction("ClickInventory", throwIfNotFound: true);
        m_Inventory_CloseInventory = m_Inventory.FindAction("CloseInventory", throwIfNotFound: true);
        m_Inventory_Rotate = m_Inventory.FindAction("Rotate", throwIfNotFound: true);
        m_Inventory_SpawnItem = m_Inventory.FindAction("SpawnItem", throwIfNotFound: true);
        m_Inventory_InventoryMouseMove = m_Inventory.FindAction("InventoryMouseMove", throwIfNotFound: true);
        m_Inventory_ClickItem = m_Inventory.FindAction("ClickItem", throwIfNotFound: true);
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_ClickInventory = m_MainMenu.FindAction("ClickInventory", throwIfNotFound: true);
        m_MainMenu_SpawnItem = m_MainMenu.FindAction("SpawnItem", throwIfNotFound: true);
        m_MainMenu_Rotate = m_MainMenu.FindAction("Rotate", throwIfNotFound: true);
        m_MainMenu_InventoryMouseMove = m_MainMenu.FindAction("InventoryMouseMove", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_MouseClick;
    private readonly InputAction m_Gameplay_MoveCamera;
    private readonly InputAction m_Gameplay_CenterCamera;
    private readonly InputAction m_Gameplay_MouseMove;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Reload;
    private readonly InputAction m_Gameplay_Aim;
    private readonly InputAction m_Gameplay_OpenInventory;
    private readonly InputAction m_Gameplay_SwitchWeapon;
    private readonly InputAction m_Gameplay_CameraFollowToggle;
    private readonly InputAction m_Gameplay_Throw;
    private readonly InputAction m_Gameplay_SelectOne;
    private readonly InputAction m_Gameplay_SelectTwo;
    private readonly InputAction m_Gameplay_SelectThree;
    private readonly InputAction m_Gameplay_SelectFour;
    private readonly InputAction m_Gameplay_SelectFive;
    public struct GameplayActions
    {
        private @DefaultInput m_Wrapper;
        public GameplayActions(@DefaultInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseClick => m_Wrapper.m_Gameplay_MouseClick;
        public InputAction @MoveCamera => m_Wrapper.m_Gameplay_MoveCamera;
        public InputAction @CenterCamera => m_Wrapper.m_Gameplay_CenterCamera;
        public InputAction @MouseMove => m_Wrapper.m_Gameplay_MouseMove;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Reload => m_Wrapper.m_Gameplay_Reload;
        public InputAction @Aim => m_Wrapper.m_Gameplay_Aim;
        public InputAction @OpenInventory => m_Wrapper.m_Gameplay_OpenInventory;
        public InputAction @SwitchWeapon => m_Wrapper.m_Gameplay_SwitchWeapon;
        public InputAction @CameraFollowToggle => m_Wrapper.m_Gameplay_CameraFollowToggle;
        public InputAction @Throw => m_Wrapper.m_Gameplay_Throw;
        public InputAction @SelectOne => m_Wrapper.m_Gameplay_SelectOne;
        public InputAction @SelectTwo => m_Wrapper.m_Gameplay_SelectTwo;
        public InputAction @SelectThree => m_Wrapper.m_Gameplay_SelectThree;
        public InputAction @SelectFour => m_Wrapper.m_Gameplay_SelectFour;
        public InputAction @SelectFive => m_Wrapper.m_Gameplay_SelectFive;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @MouseClick.started += instance.OnMouseClick;
            @MouseClick.performed += instance.OnMouseClick;
            @MouseClick.canceled += instance.OnMouseClick;
            @MoveCamera.started += instance.OnMoveCamera;
            @MoveCamera.performed += instance.OnMoveCamera;
            @MoveCamera.canceled += instance.OnMoveCamera;
            @CenterCamera.started += instance.OnCenterCamera;
            @CenterCamera.performed += instance.OnCenterCamera;
            @CenterCamera.canceled += instance.OnCenterCamera;
            @MouseMove.started += instance.OnMouseMove;
            @MouseMove.performed += instance.OnMouseMove;
            @MouseMove.canceled += instance.OnMouseMove;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @OpenInventory.started += instance.OnOpenInventory;
            @OpenInventory.performed += instance.OnOpenInventory;
            @OpenInventory.canceled += instance.OnOpenInventory;
            @SwitchWeapon.started += instance.OnSwitchWeapon;
            @SwitchWeapon.performed += instance.OnSwitchWeapon;
            @SwitchWeapon.canceled += instance.OnSwitchWeapon;
            @CameraFollowToggle.started += instance.OnCameraFollowToggle;
            @CameraFollowToggle.performed += instance.OnCameraFollowToggle;
            @CameraFollowToggle.canceled += instance.OnCameraFollowToggle;
            @Throw.started += instance.OnThrow;
            @Throw.performed += instance.OnThrow;
            @Throw.canceled += instance.OnThrow;
            @SelectOne.started += instance.OnSelectOne;
            @SelectOne.performed += instance.OnSelectOne;
            @SelectOne.canceled += instance.OnSelectOne;
            @SelectTwo.started += instance.OnSelectTwo;
            @SelectTwo.performed += instance.OnSelectTwo;
            @SelectTwo.canceled += instance.OnSelectTwo;
            @SelectThree.started += instance.OnSelectThree;
            @SelectThree.performed += instance.OnSelectThree;
            @SelectThree.canceled += instance.OnSelectThree;
            @SelectFour.started += instance.OnSelectFour;
            @SelectFour.performed += instance.OnSelectFour;
            @SelectFour.canceled += instance.OnSelectFour;
            @SelectFive.started += instance.OnSelectFive;
            @SelectFive.performed += instance.OnSelectFive;
            @SelectFive.canceled += instance.OnSelectFive;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @MouseClick.started -= instance.OnMouseClick;
            @MouseClick.performed -= instance.OnMouseClick;
            @MouseClick.canceled -= instance.OnMouseClick;
            @MoveCamera.started -= instance.OnMoveCamera;
            @MoveCamera.performed -= instance.OnMoveCamera;
            @MoveCamera.canceled -= instance.OnMoveCamera;
            @CenterCamera.started -= instance.OnCenterCamera;
            @CenterCamera.performed -= instance.OnCenterCamera;
            @CenterCamera.canceled -= instance.OnCenterCamera;
            @MouseMove.started -= instance.OnMouseMove;
            @MouseMove.performed -= instance.OnMouseMove;
            @MouseMove.canceled -= instance.OnMouseMove;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @OpenInventory.started -= instance.OnOpenInventory;
            @OpenInventory.performed -= instance.OnOpenInventory;
            @OpenInventory.canceled -= instance.OnOpenInventory;
            @SwitchWeapon.started -= instance.OnSwitchWeapon;
            @SwitchWeapon.performed -= instance.OnSwitchWeapon;
            @SwitchWeapon.canceled -= instance.OnSwitchWeapon;
            @CameraFollowToggle.started -= instance.OnCameraFollowToggle;
            @CameraFollowToggle.performed -= instance.OnCameraFollowToggle;
            @CameraFollowToggle.canceled -= instance.OnCameraFollowToggle;
            @Throw.started -= instance.OnThrow;
            @Throw.performed -= instance.OnThrow;
            @Throw.canceled -= instance.OnThrow;
            @SelectOne.started -= instance.OnSelectOne;
            @SelectOne.performed -= instance.OnSelectOne;
            @SelectOne.canceled -= instance.OnSelectOne;
            @SelectTwo.started -= instance.OnSelectTwo;
            @SelectTwo.performed -= instance.OnSelectTwo;
            @SelectTwo.canceled -= instance.OnSelectTwo;
            @SelectThree.started -= instance.OnSelectThree;
            @SelectThree.performed -= instance.OnSelectThree;
            @SelectThree.canceled -= instance.OnSelectThree;
            @SelectFour.started -= instance.OnSelectFour;
            @SelectFour.performed -= instance.OnSelectFour;
            @SelectFour.canceled -= instance.OnSelectFour;
            @SelectFive.started -= instance.OnSelectFive;
            @SelectFive.performed -= instance.OnSelectFive;
            @SelectFive.canceled -= instance.OnSelectFive;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // Inventory
    private readonly InputActionMap m_Inventory;
    private List<IInventoryActions> m_InventoryActionsCallbackInterfaces = new List<IInventoryActions>();
    private readonly InputAction m_Inventory_ClickInventory;
    private readonly InputAction m_Inventory_CloseInventory;
    private readonly InputAction m_Inventory_Rotate;
    private readonly InputAction m_Inventory_SpawnItem;
    private readonly InputAction m_Inventory_InventoryMouseMove;
    private readonly InputAction m_Inventory_ClickItem;
    public struct InventoryActions
    {
        private @DefaultInput m_Wrapper;
        public InventoryActions(@DefaultInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClickInventory => m_Wrapper.m_Inventory_ClickInventory;
        public InputAction @CloseInventory => m_Wrapper.m_Inventory_CloseInventory;
        public InputAction @Rotate => m_Wrapper.m_Inventory_Rotate;
        public InputAction @SpawnItem => m_Wrapper.m_Inventory_SpawnItem;
        public InputAction @InventoryMouseMove => m_Wrapper.m_Inventory_InventoryMouseMove;
        public InputAction @ClickItem => m_Wrapper.m_Inventory_ClickItem;
        public InputActionMap Get() { return m_Wrapper.m_Inventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
        public void AddCallbacks(IInventoryActions instance)
        {
            if (instance == null || m_Wrapper.m_InventoryActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InventoryActionsCallbackInterfaces.Add(instance);
            @ClickInventory.started += instance.OnClickInventory;
            @ClickInventory.performed += instance.OnClickInventory;
            @ClickInventory.canceled += instance.OnClickInventory;
            @CloseInventory.started += instance.OnCloseInventory;
            @CloseInventory.performed += instance.OnCloseInventory;
            @CloseInventory.canceled += instance.OnCloseInventory;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @SpawnItem.started += instance.OnSpawnItem;
            @SpawnItem.performed += instance.OnSpawnItem;
            @SpawnItem.canceled += instance.OnSpawnItem;
            @InventoryMouseMove.started += instance.OnInventoryMouseMove;
            @InventoryMouseMove.performed += instance.OnInventoryMouseMove;
            @InventoryMouseMove.canceled += instance.OnInventoryMouseMove;
            @ClickItem.started += instance.OnClickItem;
            @ClickItem.performed += instance.OnClickItem;
            @ClickItem.canceled += instance.OnClickItem;
        }

        private void UnregisterCallbacks(IInventoryActions instance)
        {
            @ClickInventory.started -= instance.OnClickInventory;
            @ClickInventory.performed -= instance.OnClickInventory;
            @ClickInventory.canceled -= instance.OnClickInventory;
            @CloseInventory.started -= instance.OnCloseInventory;
            @CloseInventory.performed -= instance.OnCloseInventory;
            @CloseInventory.canceled -= instance.OnCloseInventory;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @SpawnItem.started -= instance.OnSpawnItem;
            @SpawnItem.performed -= instance.OnSpawnItem;
            @SpawnItem.canceled -= instance.OnSpawnItem;
            @InventoryMouseMove.started -= instance.OnInventoryMouseMove;
            @InventoryMouseMove.performed -= instance.OnInventoryMouseMove;
            @InventoryMouseMove.canceled -= instance.OnInventoryMouseMove;
            @ClickItem.started -= instance.OnClickItem;
            @ClickItem.performed -= instance.OnClickItem;
            @ClickItem.canceled -= instance.OnClickItem;
        }

        public void RemoveCallbacks(IInventoryActions instance)
        {
            if (m_Wrapper.m_InventoryActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInventoryActions instance)
        {
            foreach (var item in m_Wrapper.m_InventoryActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InventoryActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InventoryActions @Inventory => new InventoryActions(this);

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private List<IMainMenuActions> m_MainMenuActionsCallbackInterfaces = new List<IMainMenuActions>();
    private readonly InputAction m_MainMenu_ClickInventory;
    private readonly InputAction m_MainMenu_SpawnItem;
    private readonly InputAction m_MainMenu_Rotate;
    private readonly InputAction m_MainMenu_InventoryMouseMove;
    public struct MainMenuActions
    {
        private @DefaultInput m_Wrapper;
        public MainMenuActions(@DefaultInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClickInventory => m_Wrapper.m_MainMenu_ClickInventory;
        public InputAction @SpawnItem => m_Wrapper.m_MainMenu_SpawnItem;
        public InputAction @Rotate => m_Wrapper.m_MainMenu_Rotate;
        public InputAction @InventoryMouseMove => m_Wrapper.m_MainMenu_InventoryMouseMove;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void AddCallbacks(IMainMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MainMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Add(instance);
            @ClickInventory.started += instance.OnClickInventory;
            @ClickInventory.performed += instance.OnClickInventory;
            @ClickInventory.canceled += instance.OnClickInventory;
            @SpawnItem.started += instance.OnSpawnItem;
            @SpawnItem.performed += instance.OnSpawnItem;
            @SpawnItem.canceled += instance.OnSpawnItem;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @InventoryMouseMove.started += instance.OnInventoryMouseMove;
            @InventoryMouseMove.performed += instance.OnInventoryMouseMove;
            @InventoryMouseMove.canceled += instance.OnInventoryMouseMove;
        }

        private void UnregisterCallbacks(IMainMenuActions instance)
        {
            @ClickInventory.started -= instance.OnClickInventory;
            @ClickInventory.performed -= instance.OnClickInventory;
            @ClickInventory.canceled -= instance.OnClickInventory;
            @SpawnItem.started -= instance.OnSpawnItem;
            @SpawnItem.performed -= instance.OnSpawnItem;
            @SpawnItem.canceled -= instance.OnSpawnItem;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @InventoryMouseMove.started -= instance.OnInventoryMouseMove;
            @InventoryMouseMove.performed -= instance.OnInventoryMouseMove;
            @InventoryMouseMove.canceled -= instance.OnInventoryMouseMove;
        }

        public void RemoveCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MainMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);
    public interface IGameplayActions
    {
        void OnMouseClick(InputAction.CallbackContext context);
        void OnMoveCamera(InputAction.CallbackContext context);
        void OnCenterCamera(InputAction.CallbackContext context);
        void OnMouseMove(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnSwitchWeapon(InputAction.CallbackContext context);
        void OnCameraFollowToggle(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnSelectOne(InputAction.CallbackContext context);
        void OnSelectTwo(InputAction.CallbackContext context);
        void OnSelectThree(InputAction.CallbackContext context);
        void OnSelectFour(InputAction.CallbackContext context);
        void OnSelectFive(InputAction.CallbackContext context);
    }
    public interface IInventoryActions
    {
        void OnClickInventory(InputAction.CallbackContext context);
        void OnCloseInventory(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnSpawnItem(InputAction.CallbackContext context);
        void OnInventoryMouseMove(InputAction.CallbackContext context);
        void OnClickItem(InputAction.CallbackContext context);
    }
    public interface IMainMenuActions
    {
        void OnClickInventory(InputAction.CallbackContext context);
        void OnSpawnItem(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnInventoryMouseMove(InputAction.CallbackContext context);
    }
}
